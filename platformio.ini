; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = ESPGeiger
;default_envs = esp32_cajoe_iotgm
;default_envs = esp32_cajoe_iotgm_no_pcnt
;default_envs = esp32_gc10
;default_envs = esp32d1_gc10
;default_envs = esp32_gc10next
;default_envs = esp32_mightyohm
;default_envs = esp32_pulse
;default_envs = esp32_pulse_no_pcnt
;default_envs = esp32_test
;default_envs = esp32_test_gc10
;default_envs = esp32_test_mightyohm
;default_envs = esp32_testpulse
;default_envs = esp32_testpulseint
;default_envs = esp32oled_gc10
;default_envs = esp32oled_gc10next
;default_envs = esp32oled_mightyohm
;default_envs = esp32oled_pulse
;default_envs = esp32oled_pulse_no_pcnt
;default_envs = esp32oled_test
;default_envs = esp32oled_test_gc10
;default_envs = esp32oled_test_mightyohm
;default_envs = esp32oled_testpulse
;default_envs = esp8266_gc10
;default_envs = esp8266_gc10next
;default_envs = esp8266_mightyohm
;default_envs = esp8266_pulse
;default_envs = esp8266_pulsemin
;default_envs = esp8266_test
;default_envs = esp8266_test_gc10
;default_envs = esp8266_test_mightyohm
;default_envs = esp8266_testpulse
;default_envs = esp8266_testpulseint
;default_envs = esp8266oled_gc10
;default_envs = esp8266oled_gc10next
;default_envs = esp8266oled_mightyohm
;default_envs = esp8266oled_pulse
;default_envs = esp8266oled_test
;default_envs = esp8266oled_test_gc10
;default_envs = esp8266oled_testpulse
;default_envs = esp8266oled_testpulseint
;default_envs = espgeigerhw
;default_envs = espgeigerlite
;default_envs = espgeigerlite_test
;default_envs = espgeigerlite_testpulse
;default_envs = espgeigerlog
;default_envs = espgeigerlog_gc10
;default_envs = espgeigerlog_gc10next
;default_envs = espgeigerlog_mightyohm
;default_envs = espgeigerlog_test
;default_envs = espgeigerlog_testpulse
;default_envs = espgeigerlog_testpulseint
;default_envs = espgeigerlog_test_mightyohm
;default_envs = espgeigerlog_test_gc10

lib_dir                     = lib/default
extra_configs =
  environments.ini
  *_env.ini

[libraries]
arduinojson = ArduinoJson@6.19.4
async_http = khoih-prog/AsyncHTTPRequest_Generic@1.13.0
softwareserial = plerup/EspSoftwareSerial@8.2.0
smoothed = MattFryer/Smoothed@1.2
wifimanager = https://github.com/tzapu/WiFiManager.git#v2.0.17
ssd1306display = thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.6.1
jled = jandelgado/JLed@^4.13.1
neopixel = makuna/NeoPixelBus@^2.8.0

[env]
framework = arduino
lib_deps =
  ${libraries.arduinojson}
  ${libraries.async_http}
  ${libraries.jled}
  ${libraries.smoothed}
  ${libraries.wifimanager}
build_flags =
  -w ; supress all warnings
 !python scripts/git_rev.py
monitor_speed = 115200

# Uncomment these 2 lines by deleting ";" and edit as needed to upload through OTA
;upload_protocol = espota
;upload_port = IP_OF_THE_BOARD

[com]
esp32_platform = espressif32@6.4.0
esp8266_platform = espressif8266@4.2.1

[com-esp]
lib_deps =
  ${env.lib_deps}
build_flags =
  ${env.build_flags}
  -D LOROL_LITTLEFS
  -D WM_NOHELP
  -D GMCOUT
  -D RADMONOUT
  -D THINGSPEAKOUT
  -D MQTTOUT
  -D MQTTAUTODISCOVER
  -D SERIALOUT
  -D WEBHOOKOUT
;  -D MQTT_MEM_DEBUG

[com-esp32]
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.softwareserial}
board_build.partitions = min_spiffs.csv

[com-esp8266]
lib_deps =
  ${com-esp.lib_deps}
board_build.flash_mode = dout
board_build.ldscript = eagle.flash.1m64.ld ;this frees more space for firmware uplad via OTA.

[geiger_type]
pulse = 1
serial = 2
test = 3
testpulse = 4
testserial = 5
testpulseint = 6

[serial_type]
gc10 = 1
gc10nx = 2
mightyohm = 3
espgeiger = 4
